openapi: 3.0.0
info:
  version: "1"
  title: Tarot Deck Service
  description: A service for tarot card readings
servers:
  - url: "http://deck:8080"
paths:
  /card:
    get:
      summary: retreive information about a card
      description: gives information about a card with the given index
      responses:
        "400":
          description: bad request
          content:
            text/plain:
              schema:
                type: string
  /card/{cardId}:
    get:
      summary: retreive information about a card
      description: gives information about a card with the given index
      parameters:
        - in: path
          name: cardId
          description: the number of the card
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 77
      responses:
        "200":
          description: details about the card
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Card"
        "400":
          description: bad request
          content:
            text/plain:
              schema:
                type: string
        "404":
          description: card with given id not found
  /deck:
    get:
      summary: get a generated deck
      operationId: getDeck
      description: gives back a shuffled deck using the specified seed if one is given and with the number of cards in the deck when specified
      parameters:
        - in: query
          name: seed
          description: a seed for the random number generator, if not present then will seed based on the time the call was made
          schema:
            type: string
        - in: query
          name: num
          description: number of cards to draw, if not pressent then will generate a full deck
          schema:
            type: integer
            minimum: 1
            maximum: 78
      responses:
        "200":
          description: a list of cards plus details about the call
          content:
            application/json:
              schema:
                type: object
                properties:
                  seed:
                    type: string
                  time:
                    type: number
                  deck:
                    type: array
                    items:
                      $ref: "#/components/schemas/Card"
                required:
                  - time
                  - deck
        "400":
          description: bad request
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    Suit:
      type: string
      enum:
        - Wands
        - Cups
        - Swords
        - Pentacles
    Pip:
      type: string
      enum:
        - 0 The Fool
        - I The Magician
        - II The High Priestess
        - III The Empress
        - IV The Emperor
        - V The Hierophant
        - VI The Lovers
        - VII The Chariot
        - VIII Strength
        - IX The Hermit
        - X The Wheel of Fortune
        - XI Justice
        - XII The Hanged Man
        - XIII Death
        - XIV Temperance
        - XV The Devil
        - XVI The Tower
        - XVII The Star
        - XVIII The Moon
        - XIX The Sun
        - XX Judgement
        - XXI The World
        - Ace
        - Two
        - Three
        - Four
        - Five
        - Six
        - Seven
        - Eight
        - Nine
        - Ten
        - Page
        - Knight
        - Queen
        - King
    Card:
      type: object
      required:
        - id
        - pip
      properties:
        id:
          type: integer
        pip:
          $ref: "#/components/schemas/Pip"
        suit:
          $ref: "#/components/schemas/Suit"
        reversed:
          type: boolean
